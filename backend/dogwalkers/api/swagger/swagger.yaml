swagger: "2.0"
info:
  version: "0.0.1"
  title: Dog Walker App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /users:
    x-swagger-router-controller: users
    post:
      operationId: createUser
      summary: create user in DB
      description: create a new user in database
      parameters:
        - name: userinfo
          in: body
          required: true
          description: object of user info strings
          schema:
            $ref: "#/definitions/UserSchema"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CreatedUserSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{id}:
    x-swagger-router-controller: user
    parameters:
      - name: id
        in: path
        description: unique identifier of user
        required: true
        type: string
    get:
      operationId: getUser
      summary: get info about 1 user
      description: get all related database info of 1 user
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteUser
      summary: delete User
      description: delete all reference of user from DB
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{id}/schedules:
    x-swagger-router-controller: users
    parameters:
      - name: id
        in: path
        description: unique identifier of user
        required: true
        type: string
    get:
      operationId: getUserSchedules
      summary: get all schedules for user
      description: get schedules users has rights to
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserScheduleSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"    
  /schedule:
    x-swagger-router-controller: schedule
    post:
      operationId: createSchedule
      summary: create a schedule
      description: create a new schedule entry in the db
      parameters:
        - name: schedule_info
          in: body
          description: object of schedule info
          required: true
          schema:
            $ref: "#/definitions/ScheduleResponse"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /schedule/{id}:
    x-swagger-router-controller: schedule
    parameters: 
      - name: id
        in: path
        description: unique schedule ID
        required: true
        type: string
    get:
      operationId: getSchedule
      summary: get schedule info
      description: get info about unique schedule
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/ScheduleResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateSchedule
      summary: update schedule info
      description: update information about schedule
      parameters:
        - name: schedule_info
          description: object of schedule updates
          in: body
          required: true
          schema:
            $ref: "#/definitions/ScheduleResponse"
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteSchedule
      summary: delete a schedule
      description: delete a schedule from the database (admin only)
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /schedule/{id}/settings/{user}:
    x-swagger-router-controller: schedule
    parameters:
      - name: id
        in: path
        description: unique schedule identifier
        required: true
        type: string
      - name: user
        in: path
        description: unique user identifier
        required: true
        type: string
    get:
      operationId: getSettings
      summary: get schedule settings
      description: get schedule settings if user is admin
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/SettingsSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateSettings
      summary: update schedule settings
      description: update schedule settings if user has rights to do so
      parameters:
        - name: settings
          in: body
          description: object of settings update
          schema:
            type: object
            properties:
              walker_id:
                type: string
              attribute_id:
                type: string
              value:
                type: string
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /schedule/{id}/entries:
    x-swagger-router-controller: schedule
    parameters:
      - name: id
        in: path
        description: unique schedule identifier
        required: true
        type: string
    get:
      operationId: getEntries
      summary: get all schedule entries
      description: get all schedule entries for 1 schedule
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/EntrySchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateEntry
      summary: update an existing entry
      description: update an schedule entry
      parameters:
        - name: entry
          in: body
          required: true
          description: object of entry info
          schema:
            $ref: "#/definitions/EntrySchema"
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: createEntry
      summary: create an Entry
      description: put a new entry in a schedule
      parameters:
        - name: entry
          in: body
          required: true
          description: object of entry info
          schema:
            $ref: "#/definitions/EntrySchema"
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  UserSchema:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      picture:
        type: string
  CreatedUserSchema:
    type: object
    properties:
      user_id:
        type: string
  GetUserResponse:
    required:
      - name
      - email
    type: object
    properties:
      name:
        type: string
      email:
        type: string
  ScheduleResponse:
    required:
      - schedule_id
      - name
    type: object
    properties:
      schedule_id:
        type: string
      name:
        type: string
      description:
        type: string
      admin:
        type: array
        items:
          type: string
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  SettingsSchema:
    type: array
    items:
      type: object
      properties:
        walker_id:
          type: string
        name:
          type: string
        email:
          type: string
        attribute_id:
          type: string
        value:
          type: string
  UserScheduleSchema:
    type: array
    items:
      type: object
      properties:
        schedule_id:
          type: string
        name:
          type: string
        attribute_id:
          type: string
        value:
          type: [array, object, boolean, string, number]
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  EntrySchema:
    type: array
    items:
      type: object
      properties:
        user_id:
          type: string
        date:
          type: string
        start_time:
          type: string
        end_time:
          type: string
        out:
          type: boolean
        comment:
          type: string
    